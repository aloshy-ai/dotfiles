#!/bin/bash
# yadm bootstrap script

system_type=$(uname -s)

echo "Bootstrapping new system..."

# Function to check if commands exist
command_exists() {
  command -v "$1" >/dev/null 2>&1
}

# Install packages based on OS
install_packages() {
  if [ "$system_type" = "Darwin" ]; then
    echo "Installing packages for macOS..."
    
    # Install Homebrew if not already installed
    if ! command_exists brew; then
      echo "Installing Homebrew..."
      /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    fi
    
    # Update Homebrew
    brew update
    
    # Install packages
    brew install \
      git \
      neovim \
      ripgrep \
      bat \
      fd \
      zsh \
      tmux \
      fzf \
      jq

    # Install casks
    brew install --cask \
      kitty \
      rectangle \
      alfred
      
  elif [ "$system_type" = "Linux" ]; then
    echo "Installing packages for Linux..."
    
    # Detect package manager
    if command_exists apt; then
      sudo apt update
      sudo apt install -y \
        git \
        neovim \
        ripgrep \
        bat \
        fd-find \
        zsh \
        tmux \
        fzf \
        jq
    elif command_exists dnf; then
      sudo dnf install -y \
        git \
        neovim \
        ripgrep \
        bat \
        fd-find \
        zsh \
        tmux \
        fzf \
        jq
    else
      echo "Unsupported Linux distribution. Please install packages manually."
    fi
  else
    echo "Unsupported operating system: $system_type"
  fi
}

# Setup shell
setup_shell() {
  # Set zsh as default shell if not already
  if [ "$SHELL" != "$(which zsh)" ]; then
    echo "Changing default shell to zsh..."
    chsh -s "$(which zsh)"
  fi
  
  # Install Oh My Zsh if not already installed
  if [ ! -d "$HOME/.oh-my-zsh" ]; then
    echo "Installing Oh My Zsh..."
    sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
  fi
  
  # Install Powerlevel10k theme
  if [ ! -d "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k" ]; then
    echo "Installing Powerlevel10k theme..."
    git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
  fi
  
  # Install zsh-autosuggestions
  if [ ! -d "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-autosuggestions" ]; then
    echo "Installing zsh-autosuggestions..."
    git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
  fi
  
  # Install zsh-syntax-highlighting
  if [ ! -d "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting" ]; then
    echo "Installing zsh-syntax-highlighting..."
    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
  fi
}

# macOS specific setup
macos_setup() {
  echo "Setting up macOS specific configurations..."
  
  # Load the Kitty setup function
  source "$HOME/.config/yadm/kitty_setup.sh"
  
  # Setup Kitty as default terminal
  kitty_terminal_setup
  
  # Set macOS preferences
  # Faster key repeat
  defaults write NSGlobalDomain KeyRepeat -int 2
  defaults write NSGlobalDomain InitialKeyRepeat -int 15
  
  # Show all file extensions
  defaults write NSGlobalDomain AppleShowAllExtensions -bool true
  
  # Show path bar in Finder
  defaults write com.apple.finder ShowPathbar -bool true
  
  # When performing a search, search the current folder by default
  defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"
  
  # Avoid creating .DS_Store files on network or USB volumes
  defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
  defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true
  
  # Automatically hide and show the Dock
  defaults write com.apple.dock autohide -bool true
  
  # Apply changes
  killall Finder
  killall Dock
}

# Linux specific setup
linux_setup() {
  echo "Setting up Linux specific configurations..."
  # Add Linux specific setup here
}

# Main bootstrap script
main() {
  # Install required packages
  install_packages
  
  # Setup shell environment
  setup_shell
  
  # OS-specific setup
  if [ "$system_type" = "Darwin" ]; then
    macos_setup
  elif [ "$system_type" = "Linux" ]; then
    linux_setup
  fi
  
  echo "Bootstrap complete! Please restart your terminal."
}

main
